"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _CommandType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _CommandTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CommandType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    PLAY: CommandType.ValueType = ...  # 0
    STOP: CommandType.ValueType = ...  # 1
    SET_VOLUME: CommandType.ValueType = ...  # 2
    QUIT: CommandType.ValueType = ...  # 99
class CommandType(_CommandType, metaclass=_CommandTypeEnumTypeWrapper):
    pass

PLAY: CommandType.ValueType = ...  # 0
STOP: CommandType.ValueType = ...  # 1
SET_VOLUME: CommandType.ValueType = ...  # 2
QUIT: CommandType.ValueType = ...  # 99
global___CommandType = CommandType


class Play(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TYPE_FIELD_NUMBER: builtins.int
    STATION_FIELD_NUMBER: builtins.int
    type: global___CommandType.ValueType = ...
    station: typing.Text = ...
    def __init__(self,
        *,
        type : typing.Optional[global___CommandType.ValueType] = ...,
        station : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["station",b"station","type",b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["station",b"station","type",b"type"]) -> None: ...
global___Play = Play

class Stop(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TYPE_FIELD_NUMBER: builtins.int
    type: global___CommandType.ValueType = ...
    def __init__(self,
        *,
        type : typing.Optional[global___CommandType.ValueType] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["type",b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["type",b"type"]) -> None: ...
global___Stop = Stop

class SetVolume(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TYPE_FIELD_NUMBER: builtins.int
    VOLUME_LEVEL_FIELD_NUMBER: builtins.int
    type: global___CommandType.ValueType = ...
    volume_level: builtins.int = ...
    def __init__(self,
        *,
        type : typing.Optional[global___CommandType.ValueType] = ...,
        volume_level : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["type",b"type","volume_level",b"volume_level"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["type",b"type","volume_level",b"volume_level"]) -> None: ...
global___SetVolume = SetVolume

class Quit(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TYPE_FIELD_NUMBER: builtins.int
    type: global___CommandType.ValueType = ...
    def __init__(self,
        *,
        type : typing.Optional[global___CommandType.ValueType] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["type",b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["type",b"type"]) -> None: ...
global___Quit = Quit

class Command(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PLAY_FIELD_NUMBER: builtins.int
    STOP_FIELD_NUMBER: builtins.int
    SET_VOLUME_FIELD_NUMBER: builtins.int
    QUIT_FIELD_NUMBER: builtins.int
    @property
    def play(self) -> global___Play: ...
    @property
    def stop(self) -> global___Stop: ...
    @property
    def set_volume(self) -> global___SetVolume: ...
    @property
    def quit(self) -> global___Quit: ...
    def __init__(self,
        *,
        play : typing.Optional[global___Play] = ...,
        stop : typing.Optional[global___Stop] = ...,
        set_volume : typing.Optional[global___SetVolume] = ...,
        quit : typing.Optional[global___Quit] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["play",b"play","quit",b"quit","set_volume",b"set_volume","stop",b"stop","sub_command",b"sub_command"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["play",b"play","quit",b"quit","set_volume",b"set_volume","stop",b"stop","sub_command",b"sub_command"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["sub_command",b"sub_command"]) -> typing.Optional[typing_extensions.Literal["play","stop","set_volume","quit"]]: ...
global___Command = Command
